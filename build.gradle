allprojects {
  apply plugin: 'java'
  
  repositories {
    mavenLocal()
    mavenCentral()
  }

  // This block of code expands all declared replace properties in the specified resource targets.
// A missing property will result in an error. Properties are expanded using ${} Groovy notation.
// When "copyIdeResources" is enabled, this will also run before the game launches in IDE environments.
// See https://docs.gradle.org/current/dsl/org.gradle.language.jvm.tasks.ProcessResources.html
tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version      : minecraft_version,
            minecraft_version_range: minecraft_version_range,
            neo_version            : neo_version,
            mod_id                 : mod_id,
            mod_name               : mod_name,
            mod_license            : mod_license,
            mod_version            : mod_version,
            mod_authors            : mod_authors,
            mod_description        : mod_description,
            fabric_loader_version  : fabric_loader_version,
            fabric_api_version     : fabric_api_version,
            forge_version          : forge_version, 
            forge_version_range    : forge_version_range,
            loader_version_range   : loader_version_range,
    ]
    inputs.properties replaceProperties
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta','META-INF/neoforge.mods.toml',"fabric.mod.json"]) {
        expand replaceProperties + [project: project]
    }
 
}

tasks.named('jar', Jar) {
    manifest {
        attributes([
            'Specification-Title'     : mod_id,
            'Specification-Vendor'    : mod_authors,
            'Specification-Version'   : '1', // We are version 1 of ourselves
            'Implementation-Title'    : project.name,
            'Implementation-Vendor'   : mod_authors
        ])
//        attributes['MixinConfigs'] = "${mod_id}.mixins.json"
    }
}

  dependencies {}
}

